{"version":3,"sources":["Header/Header.tsx","img/claws-paws.gif","HomePage/HomePage.tsx","PersonRow/PersonRow.tsx","PeopleTable/PeopleTable.tsx","PeoplePage/PeoplePage.tsx","api/getPeople.ts","PageNotFound/PageNotFound.tsx","App.tsx","index.tsx"],"names":["Header","className","to","end","HomePage","src","pic","alt","PersonRow","person","visiblePeople","location","useLocation","activeRow","pathname","searchParams","search","classNames","includes","slug","name","sex","born","died","some","elem","fatherNameSlug","fatherName","motherNameSlug","motherName","PeopleTable","handleSortChange","onClick","map","PeoplePage","useState","people","setPeople","fetchPeople","a","fetch","then","response","json","peopleFromServer","useEffect","r","updatePeople","find","mother","father","history","useNavigate","URLSearchParams","appliedQuery","get","query","setQuery","sortBy","sortOrder","applyQuery","useCallback","debounce","newQuery","set","delete","toString","filter","toLowerCase","sort","b","localeCompare","type","placeholder","onChange","event","target","value","innerHTML","PageNotFound","App","path","element","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.bc36e9b7.chunk.js","sourcesContent":["import React from 'react';\nimport './Header.scss';\nimport { NavLink } from 'react-router-dom';\n\nexport const Header: React.FC = () => {\n  return (\n    <div className=\"header\">\n      <nav className=\"nav\">\n        <NavLink\n          className=\"nav__link\"\n          to=\"/\"\n          end\n        >\n          Home Page\n        </NavLink>\n        <NavLink\n          className=\"nav__link\"\n          to=\"/people\"\n        >\n          People Page\n        </NavLink>\n      </nav>\n    </div>\n  );\n};\n","export default __webpack_public_path__ + \"static/media/claws-paws.541228cb.gif\";","import React from 'react';\nimport './HomePage.scss';\nimport pic from '../img/claws-paws.gif';\n\nexport const HomePage: React.FC = () => (\n  <>\n    <div className=\"wrapper\">\n      <h1 className=\"hp__title\">Home Page</h1>\n      <br />\n      <img src={pic} alt=\"cats :)\" />\n    </div>\n  </>\n);\n","import React from 'react';\n\nimport { Link, useLocation } from 'react-router-dom';\nimport classNames from 'classnames';\n\ntype Props = {\n  person: Person,\n  visiblePeople: Person[],\n};\n\nexport const PersonRow: React.FC<Props> = ({ person, visiblePeople }) => {\n  const location = useLocation();\n\n  const activeRow = location.pathname;\n  const searchParams = location.search;\n\n  return (\n    <tr\n      key={person.slug}\n      className={classNames({ 'bg-success text-white': activeRow.includes(person.slug) })}\n    >\n      <td>\n        {person.name}\n      </td>\n      <td>\n        {person.sex}\n      </td>\n      <td>\n        {person.born}\n      </td>\n      <td>\n        {person.died}\n      </td>\n      <td>\n        {visiblePeople.some(elem => elem.name === person.fatherNameSlug?.name) ? (\n          <Link\n            to={{ pathname: `${person.fatherNameSlug?.slug}`, search: searchParams }}\n            className=\"btn btn-info\"\n          >\n            {person.fatherName}\n          </Link>\n        )\n          : <p>{person.fatherName || 'Not father'}</p>}\n      </td>\n      <td>\n        {visiblePeople.some(elem => elem.name === person.motherNameSlug?.name) ? (\n          <Link\n            to={{ pathname: `${person.motherNameSlug?.slug}`, search: searchParams }}\n            className=\"btn btn-danger\"\n          >\n            {person.motherName}\n          </Link>\n        )\n          : <p>{person.motherName || 'Not mother'}</p>}\n      </td>\n    </tr>\n  );\n};\n","import React from 'react';\nimport { PersonRow } from '../PersonRow/PersonRow';\nimport './PeopleTable.scss';\n\ntype Props = {\n  visiblePeople: Person[],\n  handleSortChange: (event: React.MouseEvent<HTMLElement>) => void,\n};\n\nexport const PeopleTable: React.FC<Props> = ({ visiblePeople, handleSortChange }) => {\n  return (\n    <div className=\"container\">\n      <table className=\"table table-striped table-hover table-responsive\">\n        <thead>\n          <tr>\n            <th className=\"table__title\" onClick={handleSortChange}>Name</th>\n            <th className=\"table__title\" onClick={handleSortChange}>Sex</th>\n            <th className=\"table__title\" onClick={handleSortChange}>Born</th>\n            <th className=\"table__title\" onClick={handleSortChange}>Died</th>\n            <th>Mother</th>\n            <th>Father</th>\n          </tr>\n        </thead>\n        <tbody>\n          {visiblePeople.map(person => (\n            <PersonRow person={person} key={person.slug} visiblePeople={visiblePeople} />\n          ))}\n        </tbody>\n      </table>\n    </div>\n  );\n};\n","import React, { useCallback, useEffect, useState } from 'react';\nimport './PeoplePage.scss';\nimport { useLocation, useNavigate } from 'react-router-dom';\nimport debounce from 'lodash/debounce';\nimport { PeopleTable } from '../PeopleTable/PeopleTable';\nimport { getPeople } from '../api/getPeople';\n\nexport const PeoplePage: React.FC = () => {\n  const [people, setPeople] = useState<Person[]>([]);\n\n  const fetchPeople = async () => {\n    const peopleFromServer = await getPeople();\n\n    setPeople(peopleFromServer);\n  };\n\n  useEffect(() => {\n    fetchPeople().then(r => r);\n  }, []);\n\n  let updatePeople = people.map(person => (\n    {\n      ...person,\n      motherNameSlug: people.find(mother => person.motherName === mother.name),\n      fatherNameSlug: people.find(father => person.fatherName === father.name),\n    }\n  ));\n\n  const history = useNavigate();\n  const location = useLocation();\n  const searchParams = new URLSearchParams(location.search);\n\n  const appliedQuery = searchParams.get('query') || '';\n  const [query, setQuery] = useState(appliedQuery);\n  const sortBy = searchParams.get('sortBy') || '';\n  const sortOrder = searchParams.get('sortOrder') || '';\n\n  const applyQuery = useCallback(\n    debounce((newQuery: string) => {\n      if (newQuery) {\n        searchParams.set('query', newQuery);\n      } else {\n        searchParams.delete('query');\n      }\n\n      history(`?${searchParams.toString()}`);\n    }, 500),\n    [],\n  );\n\n  const handleQueryChange = (event: { target: { value: string; }; }) => {\n    setQuery(event.target.value);\n    applyQuery(event.target.value);\n  };\n\n  const handleSortChange = (event: React.MouseEvent<HTMLElement>) => {\n    const value = (event.target as Element).innerHTML;\n\n    if (event.target as Element) {\n      searchParams.set('sortBy', value);\n    } else {\n      searchParams.delete('sortBy');\n    }\n\n    if (sortOrder === 'asc' && value === sortBy) {\n      searchParams.set('sortOrder', 'desc');\n    } else {\n      searchParams.set('sortOrder', 'asc');\n    }\n\n    history(`?${searchParams.toString()}`);\n  };\n\n  if (appliedQuery) {\n    updatePeople = updatePeople.filter(\n      person => `${person.name}${person.fatherName}${person.motherName}`.toLowerCase().includes(appliedQuery.toLowerCase()),\n    );\n  }\n\n  if (sortBy) {\n    updatePeople.sort((a: Person, b: Person) => {\n      switch (sortBy) {\n        case 'Name':\n          return sortOrder === 'asc'\n            ? a.name.localeCompare(b.name)\n            : b.name.localeCompare(a.name);\n        case 'Sex':\n          return sortOrder === 'asc'\n            ? a.sex.localeCompare(b.sex)\n            : b.sex.localeCompare(a.sex);\n        case 'Born':\n          return sortOrder === 'asc'\n            ? a.born - b.born\n            : b.born - a.born;\n        case 'Died':\n          return sortOrder === 'asc'\n            ? a.died - b.died\n            : b.died - a.died;\n        default:\n          return 0;\n      }\n    });\n  }\n\n  return (\n    <>\n      <div className=\"wrapper container\">\n        <h1 className=\"pp__title\">People Page</h1>\n        <br />\n        <input\n          className=\"form-control\"\n          type=\"text\"\n          placeholder=\"Type name\"\n          onChange={handleQueryChange}\n          value={query || ''}\n        />\n      </div>\n      <PeopleTable\n        visiblePeople={updatePeople}\n        handleSortChange={handleSortChange}\n      />\n    </>\n  );\n};\n","const URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nexport const getPeople = () => fetch(URL).then(response => response.json());\n","import React from 'react';\nimport './PageNotFound.scss';\n\nexport const PageNotFound: React.FC = () => (\n  <>\n    <div className=\"wrapper\">\n      <h1 className=\"pnf__title\">404</h1>\n      <h1 className=\"pnf__title\">PAGE NOT FOUND</h1>\n    </div>\n  </>\n);\n","import React from 'react';\nimport { Routes, Route } from 'react-router-dom';\nimport './App.scss';\nimport { Header } from './Header/Header';\nimport { HomePage } from './HomePage/HomePage';\nimport { PeoplePage } from './PeoplePage/PeoplePage';\nimport { PageNotFound } from './PageNotFound/PageNotFound';\n\nconst App: React.FC = () => (\n  <div className=\"App\">\n    <Header />\n    <div className=\"App__content\">\n      <Routes>\n        <Route path=\"/\" element={<HomePage />} />\n        <Route path=\"people\" element={<PeoplePage />}>\n          <Route path=\":slug\" element={<PeoplePage />} />\n        </Route>\n\n        <Route path=\"*\" element={<PageNotFound />} />\n      </Routes>\n    </div>\n  </div>\n);\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport { HashRouter } from 'react-router-dom';\n\nimport App from './App';\n\nReactDOM.render(\n  <HashRouter>\n    <App />\n  </HashRouter>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}